{"version":3,"sources":["ng://@coreui/angular/lib/shared/classes.ts","ng://@coreui/angular/lib/shared/toggle-classes.ts","ng://@coreui/angular/lib/shared/layout/layout.directive.ts","ng://@coreui/angular/lib/shared/layout/layout.module.ts","ng://@coreui/angular/lib/shared/replace.ts","ng://@coreui/angular/lib/aside/app-aside.component.ts","ng://@coreui/angular/lib/aside/app-aside.module.ts","ng://@coreui/angular/lib/breadcrumb/app-breadcrumb.service.ts","ng://@coreui/angular/lib/breadcrumb/app-breadcrumb.component.ts","ng://@coreui/angular/lib/breadcrumb/app-breadcrumb.module.ts","ng://@coreui/angular/lib/footer/app-footer.component.ts","ng://@coreui/angular/lib/footer/app-footer.module.ts","ng://@coreui/angular/lib/header/app-header.component.ts","ng://@coreui/angular/lib/header/app-header.module.ts","ng://@coreui/angular/lib/sidebar/app-sidebar-footer.component.ts","ng://@coreui/angular/lib/sidebar/app-sidebar-form.component.ts","ng://@coreui/angular/lib/sidebar/app-sidebar-header.component.ts","ng://@coreui/angular/lib/sidebar/app-sidebar-minimizer.component.ts","ng://@coreui/angular/lib/sidebar/app-sidebar.component.ts","ng://@coreui/angular/lib/sidebar/app-sidebar-nav.component.ts","ng://@coreui/angular/lib/sidebar/app-sidebar.module.ts"],"names":["sidebarCssClasses","asideMenuCssClasses","ToggleClasses","Toggle","ClassNames","Level","indexOf","NewClassNames","slice","map","Class","document","querySelector","classList","contains","remove","add","SidebarToggleDirective","prototype","ngOnInit","this","bp","breakpoint","toggleOpen","$event","cssClass","preventDefault","Directive","args","selector","Input","HostListener","SidebarMinimizeDirective","toggle","MobileSidebarToggleDirective","hasClass","target","elementClassName","RegExp","test","className","SidebarOffCanvasCloseDirective","toggleClass","elem","newClass","replace","BrandMinimizeDirective","AsideToggleDirective","LayoutModule","NgModule","imports","CommonModule","exports","declarations","Replace","el","nativeElement","parentElement","firstChild","insertBefore","removeChild","AppAsideComponent","isFixed","fixed","displayBreakpoint","display","isOffCanvas","offCanvas","Component","template","ElementRef","AppAsideModule","AppBreadcrumbService","router","route","_this","_breadcrumbs","BehaviorSubject","Array","breadcrumbs","asObservable","events","pipe","filter","event","NavigationEnd","subscribe","currentRoute","root","url","childrenRoutes","children","forEach","outlet","routeSnapshot","snapshot","segment","path","join","push","label","data","next","Object","assign","Injectable","Router","ActivatedRoute","AppBreadcrumbComponent","service","AppBreadcrumbModule","forRoot","config","ngModule","providers","RouterModule","AppFooterComponent","AppFooterModule","AppHeaderComponent","imgSrc","brand","src","imgWidth","width","imgHeight","height","imgAlt","alt","console","log","AppHeaderModule","AppSidebarFooterComponent","AppSidebarFormComponent","AppSidebarHeaderComponent","AppSidebarMinimizerComponent","AppSidebarComponent","isCompact","compact","isMinimized","minimized","fixedPosition","HostBinding","NavDropdownDirective","NavDropdownToggleDirective","dropdown","LinkAttributesDirective","renderer","attribs","appLinkAttributes","attr","setStyle","addClass","setAttrib","styles","style","classes","isArray","split","element","key","value","createAttribute","setAttribute","Renderer2","AppSidebarNavComponent","role","isDivider","item","divider","isTitle","title","AppSidebarNavItemComponent","class","isDropdown","thisUrl","isActive","AppSidebarNavLinkComponent","getClasses","disabled","isDisabled","nav-link","btn-link","hasVariant","link","variant","getLinkType","isExternalLink","isBadge","badge","attributes","substring","isIcon","icon","hideMobile","body","AppSidebarNavDropdownComponent","AppSidebarNavTitleComponent","li","createElement","name","createText","wrapper","appendChild","AppSidebarModule"],"mappings":"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","sourcesContent":["export const sidebarCssClasses: Array<string> = [\r\n  'sidebar-show',\r\n  'sidebar-sm-show',\r\n  'sidebar-md-show',\r\n  'sidebar-lg-show',\r\n  'sidebar-xl-show'\r\n];\r\n\r\nexport const asideMenuCssClasses: Array<string> = [\r\n  'aside-menu-show',\r\n  'aside-menu-sm-show',\r\n  'aside-menu-md-show',\r\n  'aside-menu-lg-show',\r\n  'aside-menu-xl-show'\r\n];\r\n","const RemoveClasses = (NewClassNames) => {\r\n  const MatchClasses = NewClassNames.map((Class) => document.querySelector('body').classList.contains(Class));\r\n  return MatchClasses.indexOf(true) !== -1;\r\n};\r\n\r\nexport const ToggleClasses = (Toggle, ClassNames) => {\r\n  const Level = ClassNames.indexOf(Toggle);\r\n  const NewClassNames = ClassNames.slice(0, Level + 1);\r\n\r\n  if (RemoveClasses(NewClassNames)) {\r\n    NewClassNames.map((Class) => document.querySelector('body').classList.remove(Class));\r\n  } else {\r\n    document.querySelector('body').classList.add(Toggle);\r\n  }\r\n};\r\n","import { Directive, HostListener, Input, ElementRef, OnInit } from '@angular/core';\r\nimport { sidebarCssClasses, asideMenuCssClasses } from './../classes';\r\nimport { ToggleClasses } from './../toggle-classes';\r\n\r\n/**\r\n* Allows the sidebar to be toggled via click.\r\n*/\r\n@Directive({\r\n  selector: '[appSidebarToggler]'\r\n})\r\nexport class SidebarToggleDirective implements OnInit {\r\n  @Input('appSidebarToggler') breakpoint: string;\r\n  public bp;\r\n  constructor() {}\r\n  ngOnInit(): void {\r\n    this.bp = this.breakpoint;\r\n  }\r\n  @HostListener('click', ['$event'])\r\n  toggleOpen($event: any) {\r\n    $event.preventDefault();\r\n    let cssClass;\r\n    this.bp ? cssClass = `sidebar-${this.bp}-show` : cssClass = sidebarCssClasses[0];\r\n    ToggleClasses(cssClass, sidebarCssClasses);\r\n  }\r\n}\r\n\r\n@Directive({\r\n  selector: '[appSidebarMinimizer]'\r\n})\r\nexport class SidebarMinimizeDirective {\r\n  constructor() { }\r\n\r\n  @HostListener('click', ['$event'])\r\n  toggleOpen($event: any) {\r\n    $event.preventDefault();\r\n    document.querySelector('body').classList.toggle('sidebar-minimized');\r\n  }\r\n}\r\n\r\n@Directive({\r\n  selector: '[appMobileSidebarToggler]'\r\n})\r\nexport class MobileSidebarToggleDirective {\r\n  constructor() { }\r\n\r\n  // Check if element has class\r\n  private hasClass(target: any, elementClassName: string) {\r\n    return new RegExp('(\\\\s|^)' + elementClassName + '(\\\\s|$)').test(target.className);\r\n  }\r\n\r\n  @HostListener('click', ['$event'])\r\n  toggleOpen($event: any) {\r\n    $event.preventDefault();\r\n    document.querySelector('body').classList.toggle('sidebar-show');\r\n  }\r\n}\r\n\r\n/**\r\n* Allows the off-canvas sidebar to be closed via click.\r\n*/\r\n@Directive({\r\n  selector: '[appSidebarClose]'\r\n})\r\nexport class SidebarOffCanvasCloseDirective {\r\n  constructor() { }\r\n\r\n  // Check if element has class\r\n  private hasClass(target: any, elementClassName: string) {\r\n    return new RegExp('(\\\\s|^)' + elementClassName + '(\\\\s|$)').test(target.className);\r\n  }\r\n\r\n  // Toggle element class\r\n  private toggleClass(elem: any, elementClassName: string) {\r\n    let newClass = ' ' + elem.className.replace( /[\\t\\r\\n]/g, ' ' ) + ' ';\r\n    if (this.hasClass(elem, elementClassName)) {\r\n      while (newClass.indexOf(' ' + elementClassName + ' ') >= 0 ) {\r\n        newClass = newClass.replace( ' ' + elementClassName + ' ' , ' ' );\r\n      }\r\n      elem.className = newClass.replace(/^\\s+|\\s+$/g, '');\r\n    } else {\r\n      elem.className += ' ' + elementClassName;\r\n    }\r\n  }\r\n\r\n  @HostListener('click', ['$event'])\r\n  toggleOpen($event: any) {\r\n    $event.preventDefault();\r\n\r\n    if (this.hasClass(document.querySelector('body'), 'sidebar-off-canvas')) {\r\n      this.toggleClass(document.querySelector('body'), 'sidebar-opened');\r\n    }\r\n  }\r\n}\r\n\r\n@Directive({\r\n  selector: '[appBrandMinimizer]'\r\n})\r\nexport class BrandMinimizeDirective {\r\n  constructor() { }\r\n\r\n  @HostListener('click', ['$event'])\r\n  toggleOpen($event: any) {\r\n    $event.preventDefault();\r\n    document.querySelector('body').classList.toggle('brand-minimized');\r\n  }\r\n}\r\n\r\n\r\n/**\r\n* Allows the aside to be toggled via click.\r\n*/\r\n@Directive({\r\n  selector: '[appAsideMenuToggler]',\r\n})\r\nexport class AsideToggleDirective implements OnInit {\r\n  @Input('appAsideMenuToggler') breakpoint: string;\r\n  public bp;\r\n  constructor() {}\r\n  ngOnInit(): void {\r\n    this.bp = this.breakpoint;\r\n  }\r\n  @HostListener('click', ['$event'])\r\n  toggleOpen($event: any) {\r\n    $event.preventDefault();\r\n    let cssClass;\r\n    this.bp ? cssClass = `aside-menu-${this.bp}-show` : cssClass = asideMenuCssClasses[0];\r\n    ToggleClasses(cssClass, asideMenuCssClasses);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule} from '@angular/core';\r\nimport {\r\n  AsideToggleDirective,\r\n  BrandMinimizeDirective,\r\n  MobileSidebarToggleDirective,\r\n  SidebarToggleDirective,\r\n  SidebarMinimizeDirective,\r\n  SidebarOffCanvasCloseDirective\r\n} from './layout.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    AsideToggleDirective,\r\n    BrandMinimizeDirective,\r\n    MobileSidebarToggleDirective,\r\n    SidebarToggleDirective,\r\n    SidebarMinimizeDirective,\r\n    SidebarOffCanvasCloseDirective\r\n  ],\r\n  declarations: [\r\n    AsideToggleDirective,\r\n    BrandMinimizeDirective,\r\n    MobileSidebarToggleDirective,\r\n    SidebarToggleDirective,\r\n    SidebarMinimizeDirective,\r\n    SidebarOffCanvasCloseDirective\r\n  ]\r\n})\r\nexport class LayoutModule { }\r\n","export function Replace(el: any): any {\r\n  const nativeElement: HTMLElement = el.nativeElement;\r\n  const parentElement: HTMLElement = nativeElement.parentElement;\r\n  // move all children out of the element\r\n  while (nativeElement.firstChild) {\r\n    parentElement.insertBefore(nativeElement.firstChild, nativeElement);\r\n  }\r\n  // remove the empty element(the host)\r\n  parentElement.removeChild(nativeElement);\r\n}\r\n","import { Component, ElementRef, Input, OnInit } from '@angular/core';\r\nimport { asideMenuCssClasses, Replace } from './../shared/index';\r\n\r\n@Component({\r\n  selector: 'app-aside',\r\n  template: `\r\n    <aside class=\"aside-menu\">\r\n      <ng-content></ng-content>\r\n    </aside>\r\n  `\r\n})\r\nexport class AppAsideComponent implements OnInit {\r\n  @Input() display: any;\r\n  @Input() fixed: boolean;\r\n  @Input() offCanvas: boolean;\r\n\r\n  constructor(private el: ElementRef) {}\r\n\r\n  ngOnInit() {\r\n    Replace(this.el);\r\n    this.isFixed(this.fixed);\r\n    this.displayBreakpoint(this.display);\r\n  }\r\n\r\n  isFixed(fixed: boolean): void {\r\n    if (this.fixed) { document.querySelector('body').classList.add('aside-menu-fixed'); }\r\n  }\r\n\r\n  isOffCanvas(offCanvas: boolean): void {\r\n    if (this.offCanvas) { document.querySelector('body').classList.add('aside-menu-off-canvas'); }\r\n  }\r\n\r\n  displayBreakpoint(display: any): void {\r\n    if (this.display !== false ) {\r\n      let cssClass;\r\n      this.display ? cssClass = `aside-menu-${this.display}-show` : cssClass = asideMenuCssClasses[0];\r\n      document.querySelector('body').classList.add(cssClass);\r\n    }\r\n  }\r\n}\r\n","import { CommonModule} from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { LayoutModule } from './../shared/layout/layout.module';\r\n\r\nimport { AppAsideComponent } from './app-aside.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    LayoutModule\r\n  ],\r\n  exports: [\r\n    AppAsideComponent,\r\n    LayoutModule\r\n  ],\r\n  declarations: [\r\n    AppAsideComponent\r\n  ]\r\n})\r\nexport class AppAsideModule {}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\r\nimport { BehaviorSubject, Observable } from 'rxjs/index';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class AppBreadcrumbService {\r\n\r\n  breadcrumbs: Observable<Array<Object>>;\r\n\r\n  private _breadcrumbs: BehaviorSubject<Array<Object>>;\r\n\r\n  constructor(private router: Router, private route: ActivatedRoute) {\r\n\r\n    this._breadcrumbs = new BehaviorSubject<Object[]>(new Array<Object>());\r\n\r\n    this.breadcrumbs = this._breadcrumbs.asObservable();\r\n\r\n    this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe((event) => {\r\n      const breadcrumbs = [];\r\n      let currentRoute = this.route.root,\r\n      url = '';\r\n      do {\r\n        const childrenRoutes = currentRoute.children;\r\n        currentRoute = null;\r\n        // tslint:disable-next-line:no-shadowed-variable\r\n        childrenRoutes.forEach(route => {\r\n          if (route.outlet === 'primary') {\r\n            const routeSnapshot = route.snapshot;\r\n            url += '/' + routeSnapshot.url.map(segment => segment.path).join('/');\r\n            breadcrumbs.push({\r\n              label: route.snapshot.data,\r\n              url:   url\r\n            });\r\n            currentRoute = route;\r\n          }\r\n        });\r\n      } while (currentRoute);\r\n\r\n      this._breadcrumbs.next(Object.assign([], breadcrumbs));\r\n\r\n      return breadcrumbs;\r\n    });\r\n  }\r\n}\r\n","import { Component, ElementRef, Input, OnInit  } from '@angular/core';\r\nimport { Replace } from './../shared';\r\nimport { AppBreadcrumbService } from './app-breadcrumb.service';\r\n\r\n@Component({\r\n  selector: 'app-breadcrumb',\r\n  template: `\r\n    <ng-template ngFor let-breadcrumb [ngForOf]=\"breadcrumbs | async\" let-last = last>\r\n      <li class=\"breadcrumb-item\"\r\n          *ngIf=\"breadcrumb.label.title && (breadcrumb.url.slice(-1) == '/' || last)\"\r\n          [ngClass]=\"{active: last}\">\r\n        <a *ngIf=\"!last\" [routerLink]=\"breadcrumb.url\">{{breadcrumb.label.title}}</a>\r\n        <span *ngIf=\"last\" [routerLink]=\"breadcrumb.url\">{{breadcrumb.label.title}}</span>\r\n      </li>\r\n    </ng-template>\r\n  `\r\n})\r\nexport class AppBreadcrumbComponent implements OnInit {\r\n  @Input() fixed: boolean;\r\n  public breadcrumbs;\r\n\r\n  constructor(public service: AppBreadcrumbService, public el: ElementRef) { }\r\n\r\n  public ngOnInit(): void {\r\n    Replace(this.el);\r\n    this.isFixed(this.fixed);\r\n    this.breadcrumbs = this.service.breadcrumbs;\r\n  }\r\n\r\n  isFixed(fixed: boolean): void {\r\n    if (this.fixed) { document.querySelector('body').classList.add('breadcrumb-fixed'); }\r\n  }\r\n}\r\n","import { CommonModule} from '@angular/common';\r\nimport { NgModule, ModuleWithProviders} from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n// App Breadcrumb Component\r\nimport { AppBreadcrumbService } from './app-breadcrumb.service';\r\nimport { AppBreadcrumbComponent } from './app-breadcrumb.component';\r\n\r\n// @dynamic\r\n@NgModule({\r\n  imports: [ CommonModule, RouterModule ],\r\n  exports: [ AppBreadcrumbComponent ],\r\n  declarations: [ AppBreadcrumbComponent ]\r\n})\r\nexport class AppBreadcrumbModule {\r\n  static forRoot(config?: any): ModuleWithProviders {\r\n    return {\r\n      ngModule: AppBreadcrumbModule,\r\n      providers: [\r\n        AppBreadcrumbService\r\n      ]\r\n    };\r\n  }\r\n}\r\n","import { Component, ElementRef, Input, OnInit  } from '@angular/core';\r\nimport { Replace } from './../shared';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  template: `\r\n    <footer class=\"app-footer\">\r\n      <ng-content></ng-content>\r\n    </footer>\r\n  `\r\n})\r\nexport class AppFooterComponent implements OnInit {\r\n  @Input() fixed: boolean;\r\n\r\n  constructor(private el: ElementRef) {}\r\n\r\n  ngOnInit() {\r\n    Replace(this.el);\r\n    this.isFixed(this.fixed);\r\n  }\r\n\r\n  isFixed(fixed: boolean): void {\r\n    if (this.fixed) { document.querySelector('body').classList.add('footer-fixed'); }\r\n  }\r\n}\r\n","import { CommonModule} from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppFooterComponent } from './app-footer.component';\r\n\r\n@NgModule({\r\n  imports: [ CommonModule ],\r\n  exports: [ AppFooterComponent ],\r\n  declarations: [ AppFooterComponent ]\r\n})\r\nexport class AppFooterModule {}\r\n","import { Component, ElementRef, Input, OnInit } from '@angular/core';\r\nimport { Replace } from './../shared';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  template: `\r\n    <header class=\"app-header navbar\">\r\n      <ng-template [ngIf]=\"mobileSidebarToggler != false\">\r\n        <button class=\"navbar-toggler d-lg-none\" type=\"button\" appSidebarToggler>\r\n          <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n      </ng-template>\r\n      <ng-template [ngIf]=\"navbarBrand || navbarBrandFull || navbarBrandMinimized\">\r\n        <a class=\"navbar-brand\" href=\"#\">\r\n          <img *ngIf=\"navbarBrand\"\r\n               [src]=\"imgSrc(navbarBrand)\"\r\n               [attr.width]=\"imgWidth(navbarBrand)\"\r\n               [attr.height]=\"imgHeight(navbarBrand)\"\r\n               [attr.alt]=\"imgAlt(navbarBrand)\"\r\n               class=\"navbar-brand\">\r\n          <img *ngIf=\"navbarBrandFull\"\r\n               [src]=\"imgSrc(navbarBrandFull)\"\r\n               [attr.width]=\"imgWidth(navbarBrandFull)\"\r\n               [attr.height]=\"imgHeight(navbarBrandFull)\"\r\n               [attr.alt]=\"imgAlt(navbarBrandFull)\"\r\n               class=\"navbar-brand-full\">\r\n          <img *ngIf=\"navbarBrandMinimized\"\r\n               [src]=\"imgSrc(navbarBrandMinimized)\"\r\n               [attr.width]=\"imgWidth(navbarBrandMinimized)\"\r\n               [attr.height]=\"imgHeight(navbarBrandMinimized)\"\r\n               [attr.alt]=\"imgAlt(navbarBrandMinimized)\"\r\n               class=\"navbar-brand-minimized\">\r\n        </a>\r\n      </ng-template>\r\n      <ng-template [ngIf]=\"sidebarToggler != false\">\r\n        <button class=\"navbar-toggler d-md-down-none\" type=\"button\" [appSidebarToggler]=\"sidebarToggler\">\r\n          <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n      </ng-template>\r\n      <ng-content></ng-content>\r\n      <ng-template [ngIf]=\"asideMenuToggler != false\">\r\n        <button class=\"navbar-toggler d-md-down-none\" type=\"button\" [appAsideMenuToggler]=\"asideMenuToggler\">\r\n          <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n      </ng-template>\r\n      <ng-template [ngIf]=\"mobileAsideMenuToggler != false\">\r\n        <button class=\"navbar-toggler d-lg-none\" type=\"button\" appAsideMenuToggler>\r\n          <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n      </ng-template>\r\n    </header>\r\n  `\r\n})\r\nexport class AppHeaderComponent implements OnInit {\r\n\r\n  @Input() fixed: boolean;\r\n\r\n  @Input() navbarBrand: any;\r\n  @Input() navbarBrandFull: any;\r\n  @Input() navbarBrandMinimized: any;\r\n\r\n  @Input() sidebarToggler: any;\r\n  @Input() mobileSidebarToggler: any;\r\n\r\n  @Input() asideMenuToggler: any;\r\n  @Input() mobileAsideMenuToggler: any;\r\n\r\n  constructor(private el: ElementRef) {}\r\n\r\n  ngOnInit() {\r\n    Replace(this.el);\r\n    this.isFixed(this.fixed);\r\n  }\r\n\r\n  isFixed(fixed: boolean): void {\r\n    if (this.fixed) { document.querySelector('body').classList.add('header-fixed'); }\r\n  }\r\n\r\n  imgSrc(brand: any): void {\r\n    return brand.src ? brand.src : '';\r\n  }\r\n\r\n  imgWidth(brand: any): void {\r\n    return brand.width ? brand.width : 'auto';\r\n  }\r\n\r\n  imgHeight(brand: any): void {\r\n    return brand.height ? brand.height : 'auto';\r\n  }\r\n\r\n  imgAlt(brand: any): void {\r\n    return brand.alt ? brand.alt : '';\r\n  }\r\n\r\n  breakpoint(breakpoint: any): void {\r\n    console.log(breakpoint);\r\n    return breakpoint ? breakpoint : '';\r\n  }\r\n}\r\n","import { CommonModule} from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { LayoutModule } from './../shared/layout/layout.module';\r\n\r\nimport { AppHeaderComponent } from './app-header.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    LayoutModule\r\n  ],\r\n  exports: [\r\n    AppHeaderComponent,\r\n    LayoutModule\r\n  ],\r\n  declarations: [\r\n    AppHeaderComponent\r\n  ]\r\n})\r\nexport class AppHeaderModule {}\r\n","import { Component, ElementRef, OnInit  } from '@angular/core';\r\nimport { Replace } from './../shared';\r\n\r\n@Component({\r\n  selector: 'app-sidebar-footer',\r\n  template: `\r\n    <div class=\"sidebar-footer\">\r\n      <ng-content></ng-content>\r\n    </div>`\r\n})\r\nexport class AppSidebarFooterComponent implements OnInit {\r\n\r\n  constructor(private el: ElementRef) { }\r\n\r\n  ngOnInit() {\r\n    Replace(this.el);\r\n  }\r\n}\r\n","import { Component, ElementRef, OnInit  } from '@angular/core';\r\nimport { Replace } from './../shared';\r\n\r\n@Component({\r\n  selector: 'app-sidebar-form',\r\n  template: `\r\n    <form class=\"sidebar-form\">\r\n      <ng-content></ng-content>\r\n    </form>\r\n  `\r\n})\r\nexport class AppSidebarFormComponent implements OnInit {\r\n\r\n  constructor(private el: ElementRef) { }\r\n\r\n  ngOnInit() {\r\n    Replace(this.el);\r\n  }\r\n}\r\n","import { Component, ElementRef, OnInit  } from '@angular/core';\r\nimport { Replace } from './../shared';\r\n\r\n@Component({\r\n  selector: 'app-sidebar-header',\r\n  template: `\r\n    <div class=\"sidebar-header\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `\r\n})\r\nexport class AppSidebarHeaderComponent implements OnInit {\r\n\r\n  constructor(private el: ElementRef) { }\r\n\r\n  ngOnInit() {\r\n    Replace(this.el);\r\n  }\r\n}\r\n","import { Component, ElementRef, OnInit  } from '@angular/core';\r\nimport { Replace } from './../shared';\r\n\r\n@Component({\r\n  selector: 'app-sidebar-minimizer',\r\n  template: `\r\n    <button class=\"sidebar-minimizer\" type=\"button\" appSidebarMinimizer appBrandMinimizer></button>\r\n  `\r\n})\r\nexport class AppSidebarMinimizerComponent implements OnInit {\r\n\r\n  constructor(private el: ElementRef) { }\r\n\r\n  ngOnInit() {\r\n    Replace(this.el);\r\n  }\r\n}\r\n","import { Component, Input, HostBinding, OnInit } from '@angular/core';\r\nimport { sidebarCssClasses } from './../shared';\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  template: `<ng-content></ng-content>`\r\n})\r\nexport class AppSidebarComponent implements OnInit {\r\n  @Input() compact: boolean;\r\n  @Input() display: any;\r\n  @Input() fixed: boolean;\r\n  @Input() minimized: boolean;\r\n  @Input() offCanvas: boolean;\r\n\r\n  @HostBinding('class.sidebar') true;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n    this.displayBreakpoint(this.display);\r\n    this.isCompact(this.compact);\r\n    this.isFixed(this.fixed);\r\n    this.isMinimized(this.minimized);\r\n    this.isOffCanvas(this.offCanvas);\r\n  }\r\n\r\n  isCompact(compact: boolean): void {\r\n    if (this.compact) { document.querySelector('body').classList.add('sidebar-compact'); }\r\n  }\r\n\r\n  isFixed(fixed: boolean): void {\r\n    if (this.fixed) { document.querySelector('body').classList.add('sidebar-fixed'); }\r\n  }\r\n\r\n  isMinimized(minimized: boolean): void {\r\n    if (this.minimized) { document.querySelector('body').classList.add('sidebar-minimized'); }\r\n  }\r\n\r\n  isOffCanvas(offCanvas: boolean): void {\r\n    if (this.offCanvas) { document.querySelector('body').classList.add('sidebar-off-canvas'); }\r\n  }\r\n\r\n  fixedPosition(fixed: boolean): void {\r\n    if (this.fixed) { document.querySelector('body').classList.add('sidebar-fixed'); }\r\n  }\r\n\r\n  displayBreakpoint(display: any): void {\r\n    if (this.display !== false ) {\r\n      let cssClass;\r\n      this.display ? cssClass = `sidebar-${this.display}-show` : cssClass = sidebarCssClasses[0];\r\n      document.querySelector('body').classList.add(cssClass);\r\n    }\r\n  }\r\n}\r\n","import { Component, Directive, ElementRef, HostBinding, HostListener, Input, OnInit, Renderer2 } from '@angular/core';\nimport { Replace } from '../shared';\n\n@Directive({\n  selector: '[appNavDropdown]'\n})\nexport class NavDropdownDirective {\n\n  constructor(private el: ElementRef) { }\n\n  toggle() {\n    this.el.nativeElement.classList.toggle('open');\n  }\n}\n\n/**\n* Allows the dropdown to be toggled via click.\n*/\n@Directive({\n  selector: '[appNavDropdownToggle]'\n})\nexport class NavDropdownToggleDirective {\n  constructor(private dropdown: NavDropdownDirective) {}\n\n  @HostListener('click', ['$event'])\n  toggleOpen($event: any) {\n    $event.preventDefault();\n    this.dropdown.toggle();\n  }\n}\n\n@Directive({\n  selector: '[appLinkAttributes]'\n})\nexport class LinkAttributesDirective implements OnInit {\n  @Input() appLinkAttributes: {[key: string]: string };\n  constructor(private renderer: Renderer2, private el: ElementRef) {}\n\n  ngOnInit() {\n    const attribs = this.appLinkAttributes;\n    for (const attr in attribs) {\n      if (attr === 'style' && typeof(attribs[attr]) === 'object' ) {\n        this.setStyle(attribs[attr]);\n      } else if (attr === 'class') {\n        this.addClass(attribs[attr]);\n      } else {\n        this.setAttrib(attr, attribs[attr]);\n      }\n    }\n  }\n\n  private setStyle(styles) {\n    for (const style in styles) {\n      this.renderer.setStyle(this.el.nativeElement, style, styles[style] );\n    }\n  }\n\n  private addClass(classes) {\n    const classArray = Array.isArray(classes) ? classes : classes.split(' ');\n    classArray.forEach(element => {\n      this.renderer.addClass(this.el.nativeElement, element );\n    });\n  }\n\n  private setAttrib(key, value) {\n    const newAttr = document.createAttribute(key);\n    newAttr.value = value;\n    this.renderer.setAttribute(this.el.nativeElement, key, value );\n  }\n}\n\n@Component({\n  selector: 'app-sidebar-nav',\n  template: `\n    <ul class=\"nav\">\n      <ng-template ngFor let-navitem [ngForOf]=\"navItems\">\n        <li *ngIf=\"isDivider(navitem)\" class=\"nav-divider\"></li>\n        <ng-template [ngIf]=\"isTitle(navitem)\">\n          <app-sidebar-nav-title [title]='navitem'></app-sidebar-nav-title>\n        </ng-template>\n        <ng-template [ngIf]=\"!isDivider(navitem)&&!isTitle(navitem)\">\n          <app-sidebar-nav-item [item]='navitem'></app-sidebar-nav-item>\n        </ng-template>\n      </ng-template>\n    </ul>`\n})\nexport class AppSidebarNavComponent {\n  @Input() navItems: any;\n\n  @HostBinding('class.sidebar-nav') true;\n  @HostBinding('attr.role') role = 'nav';\n\n  public isDivider(item) {\n    return item.divider ? true : false;\n  }\n\n  public isTitle(item) {\n    return item.title ? true : false;\n  }\n\n  constructor() { }\n}\n\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-sidebar-nav-item',\n  template: `\n    <li *ngIf=\"!isDropdown(); else dropdown\" [ngClass]=\"hasClass() ? 'nav-item ' + item.class : 'nav-item'\">\n      <app-sidebar-nav-link [link]='item'></app-sidebar-nav-link>\n    </li>\n    <ng-template #dropdown>\n      <li [ngClass]=\"hasClass() ? 'nav-item nav-dropdown ' + item.class : 'nav-item nav-dropdown'\"\n          [class.open]=\"isActive()\"\n          routerLinkActive=\"open\"\n          appNavDropdown>\n        <app-sidebar-nav-dropdown [link]='item'></app-sidebar-nav-dropdown>\n      </li>\n    </ng-template>\n    `\n})\nexport class AppSidebarNavItemComponent implements OnInit {\n  @Input() item: any;\n\n  public hasClass() {\n    return this.item.class ? true : false;\n  }\n\n  public isDropdown() {\n    return this.item.children ? true : false;\n  }\n\n  public thisUrl() {\n    return this.item.url;\n  }\n\n  public isActive() {\n    return this.router.isActive(this.thisUrl(), false);\n  }\n\n  constructor( private router: Router, private el: ElementRef ) { }\n\n  ngOnInit() {\n    Replace(this.el);\n  }\n}\n\n@Component({\n  selector: 'app-sidebar-nav-link',\n  template: `\n    <ng-container [ngSwitch]=\"getLinkType()\">\n      <a *ngSwitchCase=\"'disabled'\"\n      [attr.disabled]=\"true\"\n      [appLinkAttributes]=\"link.attributes\"\n      href=\"\"\n      [ngClass]=\"getClasses()\">\n        <i *ngIf=\"isIcon()\" class=\"nav-icon {{ link.icon }}\"></i>\n        {{ link.name }}\n        <span *ngIf=\"isBadge()\" [ngClass]=\"'badge badge-' + link.badge.variant\">{{ link.badge.text }}</span>\n      </a>\n      <a *ngSwitchCase=\"'external'\" [ngClass]=\"getClasses()\" href=\"{{link.url}}\" [appLinkAttributes]=\"link.attributes\">\n        <i *ngIf=\"isIcon()\" class=\"nav-icon {{ link.icon }}\"></i>\n        {{ link.name }}\n        <span *ngIf=\"isBadge()\" [ngClass]=\"'badge badge-' + link.badge.variant\">{{ link.badge.text }}</span>\n      </a>\n      <a *ngSwitchDefault\n        [ngClass]=\"getClasses()\"\n        [appLinkAttributes]=\"link.attributes\"\n        routerLinkActive=\"active\"\n        [routerLink]=\"[link.url]\"\n        (click)=\"hideMobile()\">\n        <i *ngIf=\"isIcon()\" class=\"nav-icon {{ link.icon }}\"></i>\n        {{ link.name }}\n        <span *ngIf=\"isBadge()\" [ngClass]=\"'badge badge-' + link.badge.variant\">{{ link.badge.text }}</span>\n      </a>\n    </ng-container>\n  `\n})\nexport class AppSidebarNavLinkComponent implements OnInit {\n  @Input() link: any;\n\n  public getClasses() {\n    const disabled = this.isDisabled();\n    const classes = {\n      'nav-link': true,\n      'disabled': disabled,\n      'btn-link': disabled\n    };\n    if (this.hasVariant()) {\n      const variant = `nav-link-${this.link.variant}`;\n      classes[variant] = true;\n    }\n    return classes;\n  }\n\n  public getLinkType() {\n    return this.isDisabled() ? 'disabled' : this.isExternalLink() ? 'external' : '';\n  }\n\n  public hasVariant() {\n    return this.link.variant ? true : false;\n  }\n\n  public isBadge() {\n    return this.link.badge ? true : false;\n  }\n\n  public isDisabled() {\n    return this.link.attributes && this.link.attributes.disabled ? true : false;\n  }\n\n  public isExternalLink() {\n    return this.link.url.substring(0, 4) === 'http' ? true : false;\n  }\n\n  public isIcon() {\n    return this.link.icon ? true : false;\n  }\n\n  public hideMobile() {\n    if (document.body.classList.contains('sidebar-show')) {\n      document.body.classList.toggle('sidebar-show');\n    }\n  }\n\n  constructor( private router: Router, private el: ElementRef ) { }\n\n  ngOnInit() {\n    Replace(this.el);\n  }\n}\n\n@Component({\n  selector: 'app-sidebar-nav-dropdown',\n  template: `\n    <a class=\"nav-link nav-dropdown-toggle\" appNavDropdownToggle>\n      <i *ngIf=\"isIcon()\" class=\"nav-icon {{ link.icon }}\"></i>\n      {{ link.name }}\n      <span *ngIf=\"isBadge()\" [ngClass]=\"'badge badge-' + link.badge.variant\">{{ link.badge.text }}</span>\n    </a>\n    <ul class=\"nav-dropdown-items\">\n      <ng-template ngFor let-child [ngForOf]=\"link.children\">\n        <app-sidebar-nav-item [item]='child'></app-sidebar-nav-item>\n      </ng-template>\n    </ul>\n  `,\n  styles: ['.nav-dropdown-toggle { cursor: pointer; }']\n})\nexport class AppSidebarNavDropdownComponent implements OnInit {\n  @Input() link: any;\n\n  public isBadge() {\n    return this.link.badge ? true : false;\n  }\n\n  public isIcon() {\n    return this.link.icon ? true : false;\n  }\n\n  constructor( private router: Router, private el: ElementRef ) { }\n\n  ngOnInit() {\n    Replace(this.el);\n  }\n}\n\n@Component({\n  selector: 'app-sidebar-nav-title',\n  template: ''\n})\nexport class AppSidebarNavTitleComponent implements OnInit {\n  @Input() title: any;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) { }\n\n  ngOnInit() {\n    const nativeElement: HTMLElement = this.el.nativeElement;\n    const li = this.renderer.createElement('li');\n    const name = this.renderer.createText(this.title.name);\n\n    this.renderer.addClass(li, 'nav-title');\n\n    if ( this.title.class ) {\n      const classes = this.title.class;\n      this.renderer.addClass(li, classes);\n    }\n\n    if ( this.title.wrapper ) {\n      const wrapper = this.renderer.createElement(this.title.wrapper.element);\n\n      this.renderer.appendChild(wrapper, name);\n      this.renderer.appendChild(li, wrapper);\n    } else {\n      this.renderer.appendChild(li, name);\n    }\n    this.renderer.appendChild(nativeElement, li);\n    Replace(this.el);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule} from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { LayoutModule } from './../shared/layout/layout.module';\n\n// App Sidebar Component\nimport { AppSidebarFooterComponent } from './app-sidebar-footer.component';\nimport { AppSidebarFormComponent } from './app-sidebar-form.component';\nimport { AppSidebarHeaderComponent } from './app-sidebar-header.component';\nimport { AppSidebarMinimizerComponent } from './app-sidebar-minimizer.component';\nimport { AppSidebarComponent } from './app-sidebar.component';\nimport {\n  AppSidebarNavComponent,\n  AppSidebarNavDropdownComponent,\n  AppSidebarNavItemComponent,\n  AppSidebarNavLinkComponent,\n  AppSidebarNavTitleComponent,\n  NavDropdownDirective,\n  NavDropdownToggleDirective,\n  LinkAttributesDirective\n} from './app-sidebar-nav.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    LayoutModule\n  ],\n  exports: [\n    AppSidebarFooterComponent,\n    AppSidebarFormComponent,\n    AppSidebarHeaderComponent,\n    AppSidebarMinimizerComponent,\n    AppSidebarComponent,\n    AppSidebarNavComponent,\n    AppSidebarNavDropdownComponent,\n    AppSidebarNavItemComponent,\n    AppSidebarNavLinkComponent,\n    AppSidebarNavTitleComponent,\n    NavDropdownDirective,\n    NavDropdownToggleDirective,\n    LinkAttributesDirective,\n    LayoutModule\n  ],\n  declarations: [\n    AppSidebarFooterComponent,\n    AppSidebarFormComponent,\n    AppSidebarHeaderComponent,\n    AppSidebarMinimizerComponent,\n    AppSidebarMinimizerComponent,\n    AppSidebarComponent,\n    AppSidebarNavComponent,\n    AppSidebarNavDropdownComponent,\n    AppSidebarNavItemComponent,\n    AppSidebarNavLinkComponent,\n    AppSidebarNavTitleComponent,\n    NavDropdownDirective,\n    NavDropdownToggleDirective,\n    LinkAttributesDirective\n  ]\n})\nexport class AppSidebarModule { }\n"]}